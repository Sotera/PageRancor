extends /modules/core/views/layouts/layout
block content
   .row
      .col-md-6.col-md-offset-3
         form(role='form', action='/api/rank/process', method='post')
            .form-group
               label(for='urlRankRequest')
               input#username.form-control(type='text', name='urlRankRequest', value='{             "dwTrailUrlId":"testId",             "requester":"jabba",             "urls":["https://en.wikipedia.org/wiki/Batman","http://www.theatlantic.com/entertainment/archive/2014/05/batmans-traumatic-origins/361638/",                 "http://www.scientificamerican.com/article/dark-knight-shift-why-bat/"],               "terms":["batman","joker","dark knight","Bhutanese","Neal Adams"]           }')
            button.btn.btn-default(type='submit') Submit
         br

         #mynetwork(style="width: 600px; height: 600px; border: 1px solid lightgray;")
         script(type='text/javascript').
            function getScaleFreeNetwork(nodeCount) {
               var nodes = [];
               var edges = [];
               var connectionCount = [];
               // randomly create some nodes and edges
               for (var i = 0; i < nodeCount; i++) {
                  nodes.push({
                     id: i,
                     label: String(i)
                  });
                  connectionCount[i] = 0;
                  // create edges in a scale-free-network way
                  if (i == 1) {
                     var from = i;
                     var to = 0;
                     edges.push({
                        from: from,
                        to: to
                     });
                     connectionCount[from]++;
                     connectionCount[to]++;
                  }
                  else if (i > 1) {
                     var conn = edges.length * 2;
                     var rand = Math.floor(Math.random() * conn);
                     var cum = 0;
                     var j = 0;
                     while (j < connectionCount.length && cum < rand) {
                        cum += connectionCount[j];
                        j++;
                     }
                     var from = i;
                     var to = j;
                     edges.push({
                        from: from,
                        to: to
                     });
                     connectionCount[from]++;
                     connectionCount[to]++;
                  }
               }
               return {nodes: nodes, edges: edges};
            }

            var nodes = null;
            var edges = null;
            var network = null;

            function destroy() {
               if (network !== null) {
                  network.destroy();
                  network = null;
               }
            }

            function draw() {
               destroy();
               // randomly create some nodes and edges
               var nodeCount = 20;
               var data = getScaleFreeNetwork(nodeCount);

               // create a network
               var container = document.getElementById('mynetwork');
               var directionInput = "LR";
               var options = {
                  layout: {
                     hierarchical: {
                        direction: directionInput
                     }
                  }
               };
               network = new vis.Network(container, data, options);

               // add event listeners
               network.on('select', function (params) {
                  //document.getElementById('selection').innerHTML = 'Selection: ' + params.nodes;
               });
            }

            draw();

